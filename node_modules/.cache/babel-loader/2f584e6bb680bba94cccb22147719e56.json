{"ast":null,"code":"var _jsxFileName = \"/Users/dungviet/Turtorial/ReactJs/reactquery-learning/src/components/Planets.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { useQuery } from \"react-query\";\nimport Planet from \"./Planet\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst fetchPlanets = async aata => {\n  console.log(\"Run Run Run\");\n  const res = await fetch(\"https://swapi.dev/api/planets/\", {\n    mode: \"cors\"\n  });\n  return res.json();\n};\n\nconst Planets = () => {\n  _s();\n\n  const queryParam = \"123\";\n  const {\n    data,\n    status\n  } = useQuery([\"planets\"], () => fetchPlanets(queryParam), {// staleTime: 10000,\n    // cacheTime: 10000,\n  });\n  const {\n    data: data2,\n    status: status2\n  } = useQuery([\"planets\"], () => fetchPlanets(queryParam), {// staleTime: 10000,\n    // cacheTime: 10000,\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Planets\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), status === \"error\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Error fetching data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 30\n    }, this), status === \"loading\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 32\n    }, this), status === \"success\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: data.results.map(item => {\n        return /*#__PURE__*/_jsxDEV(Planet, {\n          planet: item\n        }, item.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 20\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), status2 === \"success\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: data2.results.map(item => {\n        return /*#__PURE__*/_jsxDEV(Planet, {\n          planet: item\n        }, item.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 20\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Planets, \"iFQScSIMj5ZwGS5XJaQqnODbIOk=\", false, function () {\n  return [useQuery, useQuery];\n});\n\n_c = Planets;\nexport default Planets;\n\nvar _c;\n\n$RefreshReg$(_c, \"Planets\");","map":{"version":3,"sources":["/Users/dungviet/Turtorial/ReactJs/reactquery-learning/src/components/Planets.js"],"names":["React","useEffect","useQuery","Planet","fetchPlanets","aata","console","log","res","fetch","mode","json","Planets","queryParam","data","status","data2","status2","results","map","item","name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;;;AAEA,MAAMC,YAAY,GAAG,MAAOC,IAAP,IAAgB;AACnCC,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACA,QAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,gCAAD,EAAmC;AACxDC,IAAAA,IAAI,EAAE;AADkD,GAAnC,CAAvB;AAGA,SAAOF,GAAG,CAACG,IAAJ,EAAP;AACD,CAND;;AAQA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AACpB,QAAMC,UAAU,GAAG,KAAnB;AACA,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAmBb,QAAQ,CAC/B,CAAC,SAAD,CAD+B,EAE/B,MAAME,YAAY,CAACS,UAAD,CAFa,EAG/B,CACE;AACA;AAFF,GAH+B,CAAjC;AASA,QAAM;AAAEC,IAAAA,IAAI,EAAEE,KAAR;AAAeD,IAAAA,MAAM,EAAEE;AAAvB,MAAmCf,QAAQ,CAC/C,CAAC,SAAD,CAD+C,EAE/C,MAAME,YAAY,CAACS,UAAD,CAF6B,EAG/C,CACE;AACA;AAFF,GAH+C,CAAjD;AASA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGE,MAAM,KAAK,OAAX,iBAAsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFzB,EAGGA,MAAM,KAAK,SAAX,iBAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAH3B,EAIGA,MAAM,KAAK,SAAX,iBACC;AAAA,gBACGD,IAAI,CAACI,OAAL,CAAaC,GAAb,CAAkBC,IAAD,IAAU;AAC1B,4BAAO,QAAC,MAAD;AAAwB,UAAA,MAAM,EAAEA;AAAhC,WAAaA,IAAI,CAACC,IAAlB;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD,OAFA;AADH;AAAA;AAAA;AAAA;AAAA,YALJ,eAWE;AAAA;AAAA;AAAA;AAAA,YAXF,EAYGJ,OAAO,KAAK,SAAZ,iBACC;AAAA,gBACGD,KAAK,CAACE,OAAN,CAAcC,GAAd,CAAmBC,IAAD,IAAU;AAC3B,4BAAO,QAAC,MAAD;AAAwB,UAAA,MAAM,EAAEA;AAAhC,WAAaA,IAAI,CAACC,IAAlB;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD,OAFA;AADH;AAAA;AAAA;AAAA;AAAA,YAbJ;AAAA,kBADF;AAsBD,CA1CD;;GAAMT,O;UAEqBV,Q,EASgBA,Q;;;KAXrCU,O;AA4CN,eAAeA,OAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useQuery } from \"react-query\";\nimport Planet from \"./Planet\";\n\nconst fetchPlanets = async (aata) => {\n  console.log(\"Run Run Run\");\n  const res = await fetch(\"https://swapi.dev/api/planets/\", {\n    mode: \"cors\",\n  });\n  return res.json();\n};\n\nconst Planets = () => {\n  const queryParam = \"123\";\n  const { data, status } = useQuery(\n    [\"planets\"],\n    () => fetchPlanets(queryParam),\n    {\n      // staleTime: 10000,\n      // cacheTime: 10000,\n    }\n  );\n\n  const { data: data2, status: status2 } = useQuery(\n    [\"planets\"],\n    () => fetchPlanets(queryParam),\n    {\n      // staleTime: 10000,\n      // cacheTime: 10000,\n    }\n  );\n\n  return (\n    <>\n      <div>Planets</div>\n      {status === \"error\" && <div>Error fetching data</div>}\n      {status === \"loading\" && <div>Loading data...</div>}\n      {status === \"success\" && (\n        <div>\n          {data.results.map((item) => {\n            return <Planet key={item.name} planet={item} />;\n          })}\n        </div>\n      )}\n      <hr />\n      {status2 === \"success\" && (\n        <div>\n          {data2.results.map((item) => {\n            return <Planet key={item.name} planet={item} />;\n          })}\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default Planets;\n"]},"metadata":{},"sourceType":"module"}